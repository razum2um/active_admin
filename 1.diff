diff --git a/Gemfile b/Gemfile
--- a/Gemfile
+++ b/Gemfile
@@ -56,14 +56,19 @@
 gem 'globalize3'
 gem 'cld'
 
+gem "mongoid", "~> 3.0.1" # должно быть выше Cancan
+# upserts: https://github.com/mongoid/mongoid/commit/3062363bad3ab947d7689502d6805652b20e89a0
+# gem "mongoid", git: 'git://github.com/mongoid/mongoid.git'
+
 gem 'devise'
 gem 'devise_lastseenable'
 gem 'devise-async'
 gem 'cancan'
 gem 'rolify'
-gem 'activeadmin', '~> 0.5.0'
+gem 'activeadmin', git: 'git://github.com/razum2um/active_admin', branch: 'simple_mongoid'
 gem 'awesome_nested_set'
 gem 'active_admin-awesome_nested_set'
+#gem 'activeadmin-mongoid', git: 'git://github.com/elia/activeadmin-mongoid.git'
 
 gem 'omniauth'
 gem 'omniauth-facebook'
@@ -81,10 +86,6 @@
 
 gem 'dalli'
 
-gem "mongoid", "~> 3.0.1"
-# upserts: https://github.com/mongoid/mongoid/commit/3062363bad3ab947d7689502d6805652b20e89a0
-# gem "mongoid", git: 'git://github.com/mongoid/mongoid.git'
-
 gem 'resque', require: 'resque/server'
 gem 'resque-dynamic-queues'
 gem 'resque_utils'
@@ -146,6 +147,7 @@
 end
 
 group :test, :ci do
+  gem 'capybara-screenshot'
   gem 'equivalent-xml'
   gem 'bson'
   gem 'fuubar'
diff --git a/Gemfile.lock b/Gemfile.lock
--- a/Gemfile.lock
+++ b/Gemfile.lock
@@ -6,6 +6,24 @@
       i18n
 
 GIT
+  remote: git://github.com/razum2um/active_admin
+  revision: f892f5afa6289e3c24c159694ab526aa1c3a2ef9
+  branch: simple_mongoid
+  specs:
+    activeadmin (0.5.1)
+      arbre (>= 1.0.1)
+      bourbon (>= 1.0.0)
+      devise (>= 1.1.2)
+      fastercsv
+      formtastic (>= 2.0.0)
+      inherited_resources (>= 1.3.1)
+      jquery-rails (>= 1.0.0)
+      kaminari (>= 0.13.0)
+      meta_search (>= 0.9.2)
+      rails (>= 3.0.0)
+      sass (>= 3.1.0)
+
+GIT
   remote: git://github.com/razum2um/capistrano.git
   revision: ff84c9796c48631d19cab583e4bf88734ea43f67
   specs:
@@ -73,18 +91,6 @@
       sprockets (~> 2.1.3)
     active_admin-awesome_nested_set (0.0.3)
       rails (~> 3.2.5)
-    activeadmin (0.5.1)
-      arbre (>= 1.0.1)
-      bourbon (>= 1.0.0)
-      devise (>= 1.1.2)
-      fastercsv
-      formtastic (>= 2.0.0)
-      inherited_resources (>= 1.3.1)
-      jquery-rails (>= 1.0.0)
-      kaminari (>= 0.13.0)
-      meta_search (>= 0.9.2)
-      rails (>= 3.0.0)
-      sass (>= 3.1.0)
     activemodel (3.2.8)
       activesupport (= 3.2.8)
       builder (~> 3.0.0)
@@ -143,6 +149,8 @@
       rack-test (>= 0.5.4)
       selenium-webdriver (~> 2.0)
       xpath (~> 0.1.4)
+    capybara-screenshot (0.3.4)
+      capybara (>= 1.0, < 3)
     childprocess (0.3.6)
       ffi (~> 1.0, >= 1.0.6)
     chunky_png (1.2.6)
@@ -584,7 +592,7 @@
     xpath (0.1.4)
       nokogiri (~> 1.3)
     yajl-ruby (1.1.0)
-    zeus (0.13.1)
+    zeus (0.13.2)
       method_source (>= 0.6.7)
 
 PLATFORMS
@@ -592,7 +600,7 @@
 
 DEPENDENCIES
   active_admin-awesome_nested_set
-  activeadmin (~> 0.5.0)
+  activeadmin!
   activerecord-postgres-hstore
   airbrake
   annotate
@@ -605,6 +613,7 @@
   cancan
   capistrano!
   capybara
+  capybara-screenshot
   cld
   coffee-rails (~> 3.2.1)
   compass
diff --git a/app/admin/air/bookings.rb b/app/admin/air/bookings.rb
--- a/app/admin/air/bookings.rb
+++ b/app/admin/air/bookings.rb
@@ -3,7 +3,7 @@
 ActiveAdmin.register Air::Booking do
   
   actions :index
-  menu :if => proc{ can?(:read, Air::Booking) } #, parent: I18n.t('labels.admin.geo_points')
+  menu :if => proc{ can?(:read, Air::Booking) }, parent: I18n.t('labels.admin.air')
 
   filter :user
   filter :timelimit
diff --git a/app/admin/air/queues.rb b/app/admin/air/queues.rb
--- a/app/admin/air/queues.rb
+++ b/app/admin/air/queues.rb
@@ -2,21 +2,15 @@
 
 ActiveAdmin.register Air::Queue do
 
-  config.filters = false
-  config.paginate = false
+  actions :index
+  menu :if => proc{ can?(:read, Air::Queue) }, parent: I18n.t('labels.admin.air')
 
-  actions :index
-
-  collection_action :index, :method => :get do
-    def self::admin_air_queue_path(model, *args)
-      "air_queues/#{model.id}/show"
-    end
-    @collection = Air::Queue.all
-  end
-
-  config.filters = false
-  config.paginate = false
-  config.comments = false
+  #collection_action :index, :method => :get do
+  #  def self::admin_air_queue_path(model, *args)
+  #    "air_queues/#{model.id}/show"
+  #  end
+  #  @collection = Air::Queue.all
+  #end
 
   member_action :show do
     @air_queue = Air::Queue.find_by_number({queue_number: params[:id]})
diff --git a/app/admin/air/tickets.rb b/app/admin/air/tickets.rb
--- a/app/admin/air/tickets.rb
+++ b/app/admin/air/tickets.rb
@@ -3,7 +3,7 @@
 ActiveAdmin.register Air::Ticket do
   
   actions :index
-  menu :if => proc{ can?(:read, Air::Ticket) }
+  menu :if => proc{ can?(:read, Air::Ticket) }, parent: I18n.t('labels.admin.air')
 
   config.filters = false
   config.paginate = false
diff --git a/app/admin/cities.rb b/app/admin/cities.rb
--- a/app/admin/cities.rb
+++ b/app/admin/cities.rb
@@ -23,10 +23,10 @@
 
     if can? :create, Route
       column t('labels.admin.rubric.air') do |city|
-        link_to city.routes_avia.empty? ? Route.label_for_create : "Add(#{city.avia_routes.size})", admin_city_routes_path(city, :rubric_id => Rubric.avia.id)
+        link_to city.routes_avia.empty? ? Route.label_for_create : "Add(#{city.routes_avia.size})", admin_city_routes_path(city, :rubric_id => Rubric.avia.id)
       end
       column t('labels.admin.rubric.rail') do |city|
-        link_to city.routes_zd.empty? ? Route.label_for_create : "Add(#{city.zd_routes.size})", admin_city_routes_path(city, :rubric_id => Rubric.zd.id)
+        link_to city.routes_zd.empty? ? Route.label_for_create : "Add(#{city.routes_zd.size})", admin_city_routes_path(city, :rubric_id => Rubric.zd.id)
       end
     end
     default_actions
diff --git a/app/admin/sabre/sessions.rb b/app/admin/sabre/sessions.rb
new file mode 100644
--- /dev/null
+++ b/app/admin/sabre/sessions.rb
@@ -0,0 +1,15 @@
+ActiveAdmin.register Sabre::Session do
+
+  actions :index, :show
+  menu :if => proc{ can?(:read, Sabre::Session ) }, parent: I18n.t('labels.admin.sabre')
+
+  index do
+    column :id do |session|
+      link_to session.id, [:admin, session]
+    end
+    column :info_state
+    column :client_id
+    column :conversation_id
+    column :updated_at
+  end
+end
diff --git a/app/models/abstract/admin_proxy.rb b/app/models/abstract/admin_proxy.rb
new file mode 100644
--- /dev/null
+++ b/app/models/abstract/admin_proxy.rb
@@ -0,0 +1,59 @@
+# декоратор для моделей Active Admin
+# нужен на странице списка изза сильной привязанности ActiveAdmin к ActiveRecord
+# оборачивание должно происходить в collection_action
+#
+#   collection_action :index, :method => :get do
+#     @collection = AdminProxy.new(Sabre::Session.all)
+#   end
+#
+# помимо оборачивания при регистрации необходимо отключить пагинацию, фильтры и комментарии
+#
+#   ActiveAdmin.register Sabre::Session do
+#     config.filters = false
+#     config.paginate = false
+#     config.comments = false
+#     ...
+#   end
+#
+#  Декорируемый класс должен respond_to (content_columns + columns) или fields
+class AdminProxy
+  def initialize(decorated)
+    @decorated = decorated
+  end
+
+  def method_missing(meth, *args, &block)
+    @decorated.send(meth, *args, &block)
+  end
+
+  def columns
+    return @decorated.columns if @decorated.respond_to? :columns
+    return @decorated.fields.map(&:second) if @decorated.ancestors.include? Mongoid::Persistence
+    raise NotImplementedError, "#{@decorated.class} must respond_to columns | fields"
+  end
+
+  def content_columns
+    return @decorated.content_columns if @decorated.respond_to? :content_columns
+    return @decorated.fields.map(&:second).select {|f| f.name !~ /(^_|^(created|updated)_at)/} if @decorated.ancestors.include? Mongoid::Persistence
+    raise NotImplementedError, "#{@decorated.class} must respond_to content_columns | fields"
+  end
+
+  %w[clone dup reorder].each do |meth|
+    send :define_method, meth do |*args, &block|
+      self
+    end
+  end
+
+  %w[num_pages current_page total_pages].each do |meth|
+    send :define_method, meth do |*args, &block|
+      1
+    end
+  end
+
+  def limit_value
+    false
+  end
+
+  def total_count
+    @decorated.length
+  end
+end
diff --git a/config/application.rb b/config/application.rb
--- a/config/application.rb
+++ b/config/application.rb
@@ -92,6 +92,10 @@
     end
     config.assets.initialize_on_precompile = true
     config.remote_ip_keys = %w(HTTP_X_FORWARDED_FOR HTTP_X_REAL_IP REMOTE_ADDR)
-    #config.middleware.use PryRescue::Rack if Rails.env.development?
+    config.middleware.use PryRescue::Rack if Rails.env.development?
+    #config.log_tags = [ 
+    #  lambda { |request| "uuid:#{request.uuid}" },
+    #  lambda { |request| "sid:#{request.session_options[:id]}" }
+    #]
   end
 end
diff --git a/config/initializers/active_admin.rb b/config/initializers/active_admin.rb
--- a/config/initializers/active_admin.rb
+++ b/config/initializers/active_admin.rb
@@ -129,12 +129,22 @@
 end
 
 module ActiveAdmin
+
+  class Dsl
+    def run_registration_block(&block)
+      register(*args) do
+        block.call
+      end
+    end
+  end
+
   class BaseController
     include UrlHelper
-    
+
     private
     def second_render
       #в админке второй рендер не нужен
     end
+
   end
 end
diff --git a/config/locales/en.yml b/config/locales/en.yml
--- a/config/locales/en.yml
+++ b/config/locales/en.yml
@@ -59,6 +59,8 @@
       main: Main page
       all: All
       statistics: Статистика переходов
+      air: Air
+      sabre: Sabre
       geo_points: Geo points
       admin_log: Лог доступа в админку
       subdomain:
@@ -361,6 +363,11 @@
       acc:
         one: subdomain
         many: subdomains
+  mongoid:
+    models:
+      sabre/session:
+        one: Session
+        many: Sessions
   activerecord:
     models:
       geo/city:
diff --git a/config/locales/ru.yml b/config/locales/ru.yml
--- a/config/locales/ru.yml
+++ b/config/locales/ru.yml
@@ -59,8 +59,10 @@
       main: Главная
       all: Все
       statistics: Статистика переходов
+      air: Air
+      sabre: Sabre
       geo_points: Гео точки
-      admin_log: Лог доступа в админку
+      admin_log: updated_at доступа в админку
       subdomain:
         one: Поддомен
         many: Поддомены
@@ -364,6 +366,11 @@
       acc:
         one: поддомен
         many: поддомены
+  mongoid:
+    models:
+      sabre/session:
+        one: Сессия
+        many: Сессии
   activerecord:
     attributes:
       text:
diff --git a/spec/controllers/admin/air_queues_controller_spec.rb b/spec/controllers/admin/air_queues_controller_spec.rb
--- a/spec/controllers/admin/air_queues_controller_spec.rb
+++ b/spec/controllers/admin/air_queues_controller_spec.rb
@@ -33,4 +33,4 @@
       expect(response.code).to eq("200")
     end
   end
-end
\ No newline at end of file
+end
diff --git a/spec/controllers/admin/sabre_sessions_controller_spec.rb b/spec/controllers/admin/sabre_sessions_controller_spec.rb
new file mode 100644
--- /dev/null
+++ b/spec/controllers/admin/sabre_sessions_controller_spec.rb
@@ -0,0 +1,27 @@
+require "spec_helper"
+
+describe Admin::SabreSessionsController do
+  include Devise::TestHelpers
+  render_views
+
+  before (:each) do
+    @user = FactoryGirl.create(:user)
+    @user.add_role :superadmin
+    sign_in @user
+  end
+
+  describe "GET index" do
+    it "has a 200 status code" do
+      get :index
+      expect(response.code).to eq("200")
+    end
+  end
+
+  describe "GET show" do
+    it "has a 200 status code" do
+      session = FactoryGirl.create :sabre_session
+      get :show, id: session.id
+      expect(response.code).to eq("200")
+    end
+  end
+end
diff --git a/spec/factories/sabre.rb b/spec/factories/sabre.rb
--- a/spec/factories/sabre.rb
+++ b/spec/factories/sabre.rb
@@ -1,3 +1,7 @@
 FactoryGirl.define do
-  factory :sabre_session, class: Sabre::Session
+  factory :sabre_session, class: Sabre::Session do
+    sequence :id do |n| "#{n}" end
+    state 'ready'
+    sequence :token do |n| "token-#{n}" end
+  end
 end
diff --git a/spec/factories/stat/entry_point.rb b/spec/factories/stat/entry_point.rb
new file mode 100644
--- /dev/null
+++ b/spec/factories/stat/entry_point.rb
@@ -0,0 +1,13 @@
+# encoding: UTF-8
+FactoryGirl.define do
+  factory :stat_entry_point_adwords, class: Stat::EntryPoint do
+    url_regexp 'adw'
+    name 'Adwords'
+    active true
+  end
+  factory :stat_entry_point_direct, class: Stat::EntryPoint do
+    url_regexp 'direct'
+    name 'Direct'
+    active true
+  end
+end
diff --git a/spec/factories/stat/entry_source.rb b/spec/factories/stat/entry_source.rb
new file mode 100644
--- /dev/null
+++ b/spec/factories/stat/entry_source.rb
@@ -0,0 +1,18 @@
+# encoding: UTF-8
+FactoryGirl.define do
+  factory :stat_entry_source_google, class: Stat::EntrySource do
+    name 'Google'
+    referer_regexp 'google\.\w{2,4}(?:\.\w{2,4})?'
+    referer_param 'q'
+  end
+  factory :stat_entry_source_yandex, class: Stat::EntrySource do
+    name 'Yandex'
+    referer_regexp 'yandex\.[ru|ua|kz]'
+    referer_param 'text'
+  end
+  factory :stat_entry_source_rambler, class: Stat::EntrySource do
+    name 'Rambler'
+    referer_regexp 'nova\.rambler\.ru'
+    referer_param 'query'
+  end
+end
diff --git a/spec/factories/stat/event.rb b/spec/factories/stat/event.rb
new file mode 100644
diff --git a/spec/fixtures/stat.entry_points.yml b/spec/fixtures/stat.entry_points.yml
deleted file mode 100644
--- a/spec/fixtures/stat.entry_points.yml
+++ /dev/null
@@ -1,17 +0,0 @@
----
-stat.entry_points_001:
-  id: '4'
-  url_regexp: adw
-  name: Adwords
-  description: 
-  active: t
-  created_at: '2012-10-17 09:27:49.678779'
-  updated_at: '2012-10-17 09:27:49.678779'
-stat.entry_points_002:
-  id: '5'
-  url_regexp: direct
-  name: Direct
-  description: 
-  active: t
-  created_at: '2012-10-17 09:27:49.681685'
-  updated_at: '2012-10-17 09:27:49.681685'
diff --git a/spec/fixtures/stat.entry_sources.yml b/spec/fixtures/stat.entry_sources.yml
deleted file mode 100644
--- a/spec/fixtures/stat.entry_sources.yml
+++ /dev/null
@@ -1,73 +0,0 @@
----
-stat.entry_sources_001:
-  id: '21'
-  name: Google
-  referer_regexp: google\.\w{2,4}(?:\.\w{2,4})?
-  referer_param: q
-  description: 
-  created_at: '2012-10-17 09:27:49.659609'
-  updated_at: '2012-10-17 09:27:49.659609'
-  active: t
-stat.entry_sources_002:
-  id: '22'
-  name: Yandex
-  referer_regexp: yandex\.[ru|ua|kz]
-  referer_param: text
-  description: 
-  created_at: '2012-10-17 09:27:49.66519'
-  updated_at: '2012-10-17 09:27:49.66519'
-  active: t
-stat.entry_sources_003:
-  id: '23'
-  name: Mail.ru
-  referer_regexp: go\.mail\.ru
-  referer_param: q
-  description: 
-  created_at: '2012-10-17 09:27:49.667137'
-  updated_at: '2012-10-17 09:27:49.667137'
-  active: t
-stat.entry_sources_004:
-  id: '24'
-  name: Ask
-  referer_regexp: (?:ru\.)?ask\.com
-  referer_param: q
-  description: 
-  created_at: '2012-10-17 09:27:49.669121'
-  updated_at: '2012-10-17 09:27:49.669121'
-  active: t
-stat.entry_sources_005:
-  id: '25'
-  name: Rambler
-  referer_regexp: nova\.rambler\.ru
-  referer_param: query
-  description: 
-  created_at: '2012-10-17 09:27:49.670958'
-  updated_at: '2012-10-17 09:27:49.670958'
-  active: t
-stat.entry_sources_006:
-  id: '26'
-  name: bing.com
-  referer_regexp: bing\.com
-  referer_param: q
-  description: 
-  created_at: '2012-10-17 09:27:49.672856'
-  updated_at: '2012-10-17 09:27:49.672856'
-  active: t
-stat.entry_sources_007:
-  id: '27'
-  name: nigma.ru
-  referer_regexp: nigma\.com
-  referer_param: s
-  description: 
-  created_at: '2012-10-17 09:27:49.674419'
-  updated_at: '2012-10-17 09:27:49.674419'
-  active: t
-stat.entry_sources_008:
-  id: '28'
-  name: search.qip.ru
-  referer_regexp: search\.qip\.ru
-  referer_param: query
-  description: 
-  created_at: '2012-10-17 09:27:49.675943'
-  updated_at: '2012-10-17 09:27:49.675943'
-  active: t
diff --git a/spec/fixtures/stat.events.yml b/spec/fixtures/stat.events.yml
deleted file mode 100644
--- a/spec/fixtures/stat.events.yml
+++ /dev/null
@@ -1,22 +0,0 @@
----
-stat.events_001:
-  id: '7'
-  name: search
-  controller: air/searches
-  action: create
-  created_at: '2012-10-17 09:27:49.693607'
-  updated_at: '2012-10-17 09:27:49.693607'
-stat.events_002:
-  id: '8'
-  name: booking
-  controller: air/bookings
-  action: create
-  created_at: '2012-10-17 09:27:49.699001'
-  updated_at: '2012-10-17 09:27:49.699001'
-stat.events_003:
-  id: '9'
-  name: payment
-  controller: air/payments
-  action: create
-  created_at: '2012-10-17 09:27:49.702541'
-  updated_at: '2012-10-17 09:27:49.702541'
diff --git a/spec/lib/services/sabre/requests/passenger_details_spec.rb b/spec/lib/services/sabre/requests/passenger_details_spec.rb
--- a/spec/lib/services/sabre/requests/passenger_details_spec.rb
+++ b/spec/lib/services/sabre/requests/passenger_details_spec.rb
@@ -10,7 +10,6 @@
   it 'parses passenger data' do
     req = Sabre::Requests::PassengerDetails.new
     req.stub(:target).and_return(@target)
-    binding.pry
     expect(Gyoku.xml req.body).to be_xml_like_that %q{
     <PostProcessing><EndTransactionRQ><EndTransaction Ind=\"true\"><Source ReceivedFrom=\"ITC\"></Source></EndTransaction></EndTransactionRQ></PostProcessing><SpecialServiceRQ HaltOnError=\"true\"><SpecialServiceInfo><Service SegmentNumber=\"A\" SSR_Code=\"DOCS\"><PersonName NameNumber=\"1\"></PersonName><Text>P/RU/12121212/RU/16JUN89/M/20DEC2013/Petr/Petrov</Text></Service></SpecialServiceInfo></SpecialServiceRQ><TravelItineraryAddInfoRQ><AgencyInfo><Ticketing TicketTimeLimit=\"12-08T08:34\" TicketType=\"7TAW\"></Ticketing></AgencyInfo><CustomerInfo><ContactNumbers><ContactNumber NameNumber=\"1.1\" Phone=\"35-35-35\" PhoneUseType=\"H\"></ContactNumber></ContactNumbers><Email Address=\"male@yourticket.com\" NameNumber=\"1.1\"></Email><PersonName NameNumber=\"1.1\" Infant=\"false\"><GivenName>Petr</GivenName><Surname>Petrov</Surname></PersonName></CustomerInfo></TravelItinerary
     }
diff --git a/spec/models/stat/entry_point_spec.rb b/spec/models/stat/entry_point_spec.rb
--- a/spec/models/stat/entry_point_spec.rb
+++ b/spec/models/stat/entry_point_spec.rb
@@ -3,14 +3,13 @@
 require 'spec_helper'
 
 describe Stat::EntryPoint do
+
   before do
+    FactoryGirl.create(:stat_entry_point_direct)
+    FactoryGirl.create(:stat_entry_point_adwords)
     @unknown = "http://твойбилет.рф?smth"
   end
 
-  it 'loads fixtures' do
-    expect(Stat::EntryPoint.count).to eq 2
-  end
-
   {
     'Adwords' => 'http://твойбилет.рф?adw',
     'Direct' => 'http://твойбилет.рф?direct',
diff --git a/spec/models/stat/entry_source_spec.rb b/spec/models/stat/entry_source_spec.rb
--- a/spec/models/stat/entry_source_spec.rb
+++ b/spec/models/stat/entry_source_spec.rb
@@ -4,13 +4,12 @@
 
 describe Stat::EntrySource do
   before do
+    FactoryGirl.create(:stat_entry_source_google)
+    FactoryGirl.create(:stat_entry_source_yandex)
+    FactoryGirl.create(:stat_entry_source_rambler)
     @unknown = "http://asd.wiki.ru?btnG=%D0%9D%D0%B0%D0%B9%D1%82%D0%B8!&query=#{URI.encode 'авиабилеты'}"
   end
 
-  it 'loads fixtures' do
-    expect(Stat::EntrySource.count).to eq 8
-  end
-
   {
     "Yandex" => "http://yandex.ru/yandsearch?text=#{URI.encode 'авиа билеты'}",
     "Google" => "http://www.google.ru/?hl=ru&gs_nf=1&cp=17&gs_id=ck&xhr=t&q=#{URI.encode 'авиа билеты'}",
diff --git a/spec/requests/admin/sabre_sessions_spec.rb b/spec/requests/admin/sabre_sessions_spec.rb
new file mode 100644
--- /dev/null
+++ b/spec/requests/admin/sabre_sessions_spec.rb
@@ -0,0 +1,28 @@
+require "spec_helper"
+
+describe 'Sabre sessions in admin' do
+  before do
+    @user = sign_in_as :superadmin
+  end
+
+  def create_sabre_session
+    FactoryGirl.create :sabre_session
+  end
+
+  describe "GET index" do
+    it "has a sabre session table" do
+      create_sabre_session
+      visit admin_sabre_sessions_path
+      expect(page).to have_content "normal"
+      expect(page).to have_content "Displaying 1 sabre/session"
+    end
+  end
+
+  describe "GET show" do
+    it "has a sabre attributes table" do
+      session = create_sabre_session
+      visit admin_sabre_session_path(session)
+      expect(page).to have_content "State ready"
+    end
+  end
+end
diff --git a/spec/spec_helper.rb b/spec/spec_helper.rb
--- a/spec/spec_helper.rb
+++ b/spec/spec_helper.rb
@@ -22,7 +22,6 @@
   RSpec.configure do |config|
     config.mock_with :rspec
     config.fixture_path = "#{::Rails.root}/spec/fixtures"
-    config.global_fixtures = :all
 
     # see support/active_record
     config.use_transactional_fixtures = ActiveRecord::Base.respond_to?(:shared_connection)
